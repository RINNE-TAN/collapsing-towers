import Mathlib.Data.Nat.Basic

inductive Expr : Type where
  | bvar (i : ‚Ñï)
  | fvar (x : ‚Ñï)
  | lam (e : Expr)
  | app‚ÇÅ (f : Expr) (arg : Expr)
  | app‚ÇÇ (f : Expr) (arg : Expr)
  | lit (n : ‚Ñï)
  | lift (e : Expr)
  | run (e : Expr)
  | code (e : Expr)
  | reflect (e : Expr)
  | lamùïî (e : Expr)
  | lets (b : Expr) (e : Expr)
  | letsùïî (b : Expr) (e : Expr)
  | unit
  | loc (l : ‚Ñï)
  | alloc‚ÇÅ (e : Expr)
  | load‚ÇÅ (e : Expr)
  | store‚ÇÅ (l : Expr) (r : Expr)
  | alloc‚ÇÇ (e : Expr)
  | load‚ÇÇ (e : Expr)
  | store‚ÇÇ (l : Expr) (r : Expr)
